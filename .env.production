# ===================================================================
# E-con News Terminal - Production Environment Configuration v2.024
# Optimized for Render.com 512MB RAM deployment
# Terminal-focused configuration with performance optimizations
# ===================================================================

# === CORE APPLICATION SETTINGS ===
# Flask environment configuration
FLASK_ENV=production
FLASK_DEBUG=False
FLASK_APP=app.py

# Secret key for session management (CHANGE THIS!)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your_production_secret_key_change_this_immediately

# === DEPLOYMENT PLATFORM ===
# Port configuration (auto-set by Render.com)
PORT=8080

# Platform identification
RENDER=true
DEPLOYMENT_PLATFORM=render
ENVIRONMENT=production

# === AI CONFIGURATION ===
# Required: Gemini AI API Key for content analysis
# Get from: https://aistudio.google.com/
GEMINI_API_KEY=your_gemini_api_key_here

# AI Processing limits for 512MB RAM optimization
GEMINI_MAX_TOKENS=1500
GEMINI_TEMPERATURE=0.2
GEMINI_TIMEOUT=25
AI_CACHE_SIZE=10
AI_CONTEXT_MEMORY=20

# === MEMORY OPTIMIZATION ===
# Memory management for Render.com free tier (512MB)
MAX_MEMORY_MB=400
MEMORY_WARNING_THRESHOLD=0.8
MEMORY_CRITICAL_THRESHOLD=0.9
ENABLE_MEMORY_MONITORING=true
AUTO_GC_THRESHOLD=0.7

# Cache configuration (optimized for limited RAM)
MAX_GLOBAL_CACHE=500
MAX_CACHE_ENTRIES=25
CACHE_EXPIRE_HOURS=3
USER_SESSION_LIMIT=20

# === PERFORMANCE TUNING ===
# Gunicorn worker configuration
WORKERS=1
WORKER_CLASS=sync
WORKER_TIMEOUT=120
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=50
PRELOAD_APP=true

# Request rate limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=10

# === NEWS PROCESSING ===
# RSS feed limits (reduced for memory efficiency)
RSS_FETCH_LIMIT=15
RSS_TIMEOUT=10
RSS_MAX_CONCURRENT=3
RSS_RETRY_ATTEMPTS=2

# Content processing
CONTENT_EXTRACTION_TIMEOUT=15
CONTENT_MAX_LENGTH=5000
DUPLICATE_CHECK_ENABLED=true

# === TERMINAL INTERFACE ===
# Terminal-specific features
TERMINAL_MODE=full
ENABLE_MATRIX_EFFECTS=true
ENABLE_GLITCH_EFFECTS=true
ENABLE_TERMINAL_COMMANDS=true
COMMAND_HISTORY_SIZE=50

# Terminal performance
TERMINAL_MONITORING=true
REAL_TIME_STATS=true
PERFORMANCE_LOGGING=true

# === LOGGING CONFIGURATION ===
# Python logging level
LOG_LEVEL=INFO
FLASK_LOG_LEVEL=WARNING

# Structured logging
ENABLE_JSON_LOGGING=true
LOG_PERFORMANCE_METRICS=true
LOG_MEMORY_USAGE=true

# Error tracking
TRACK_ERRORS=true
ERROR_RATE_LIMIT=10

# === SECURITY SETTINGS ===
# Security headers
ENABLE_SECURITY_HEADERS=true
FORCE_HTTPS=true
SECURE_COOKIES=true

# CORS configuration
CORS_ORIGINS=*
CORS_METHODS=GET,POST,OPTIONS
CORS_HEADERS=Content-Type,Authorization

# Rate limiting
ENABLE_RATE_LIMITING=true
RATE_LIMIT_STORAGE=memory

# === DATABASE & STORAGE ===
# Database configuration (if using database features)
# DATABASE_URL=postgresql://user:password@host:port/dbname
DATABASE_ENABLED=false

# File storage (for future features)
UPLOAD_FOLDER=/tmp/uploads
MAX_UPLOAD_SIZE=5MB

# === NETWORKING ===
# HTTP client configuration
HTTP_TIMEOUT=15
HTTP_RETRIES=3
HTTP_POOL_SIZE=10
USER_AGENT_ROTATION=true

# Network optimization
ENABLE_HTTP2=true
ENABLE_COMPRESSION=true
COMPRESSION_LEVEL=6

# === CACHING STRATEGY ===
# Cache backend configuration
CACHE_BACKEND=memory
CACHE_DEFAULT_TIMEOUT=300
CACHE_KEY_PREFIX=econ_terminal

# Redis configuration (if upgrading from free tier)
# REDIS_URL=redis://localhost:6379/0
# REDIS_ENABLED=false

# === MONITORING & ANALYTICS ===
# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
MONITOR_MEMORY_USAGE=true
MONITOR_RESPONSE_TIMES=true

# Analytics (optional)
# ANALYTICS_ID=your_analytics_id
ENABLE_ANALYTICS=false

# Health checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/health
DEEP_HEALTH_CHECK=false

# === EXTERNAL SERVICES ===
# CDN configuration (if using CDN)
# CDN_URL=https://your-cdn.com
CDN_ENABLED=false

# Webhook configuration (for notifications)
# WEBHOOK_URL=https://your-webhook-url.com
WEBHOOK_ENABLED=false

# === BRUTALISM THEME ===
# Theme configuration
THEME_MODE=retro_brutalism
ENABLE_TERMINAL_AESTHETICS=true
ENABLE_SCANLINE_EFFECTS=true
ENABLE_CRT_SIMULATION=true

# Color scheme
TERMINAL_COLOR_SCHEME=matrix_green
CONTRAST_MODE=high
ACCESSIBILITY_MODE=false

# === CONTENT DELIVERY ===
# Static file configuration
STATIC_FILE_CACHING=true
STATIC_FILE_COMPRESSION=true
STATIC_FILE_VERSIONING=true

# Asset optimization
MINIFY_CSS=true
MINIFY_JS=true
OPTIMIZE_IMAGES=false

# === LOCALIZATION ===
# Language and timezone
DEFAULT_LANGUAGE=vi
DEFAULT_TIMEZONE=Asia/Ho_Chi_Minh
ENABLE_I18N=false

# Currency and formatting
DEFAULT_CURRENCY=VND
NUMBER_FORMAT=vietnamese

# === FEATURE FLAGS ===
# Enable/disable features based on available resources
ENABLE_AI_FEATURES=true
ENABLE_WEBSOCKETS=false
ENABLE_REAL_TIME_UPDATES=true
ENABLE_BACKGROUND_TASKS=false

# Advanced features (require more memory)
ENABLE_ADVANCED_ANALYTICS=false
ENABLE_ML_FEATURES=false
ENABLE_ADVANCED_CACHING=false

# === DEVELOPMENT FEATURES (DISABLED IN PRODUCTION) ===
# Debug features
ENABLE_DEBUG_TOOLBAR=false
ENABLE_PROFILING=false
ENABLE_HOT_RELOAD=false

# Testing features
ENABLE_TEST_ROUTES=false
MOCK_EXTERNAL_SERVICES=false

# === BACKUP & RECOVERY ===
# Backup configuration (if using persistent storage)
ENABLE_AUTO_BACKUP=false
BACKUP_INTERVAL=24h
BACKUP_RETENTION=7d

# Recovery settings
ENABLE_AUTO_RECOVERY=true
RECOVERY_TIMEOUT=30s

# === EXPERIMENTAL FEATURES ===
# Beta features (use with caution)
ENABLE_EXPERIMENTAL_AI=false
ENABLE_BETA_TERMINAL=false
ENABLE_ADVANCED_MATRIX=false

# === RENDER.COM SPECIFIC ===
# Render.com deployment optimizations
RENDER_EXTERNAL_HOSTNAME=${RENDER_EXTERNAL_HOSTNAME:-localhost}
RENDER_INSTANCE_ID=${RENDER_INSTANCE_ID:-local}
RENDER_SERVICE_NAME=${RENDER_SERVICE_NAME:-econ-terminal}

# Build optimizations
BUILD_OPTIMIZATION=true
DEPENDENCY_CACHING=true
STATIC_BUILD=true

# === MONITORING ENDPOINTS ===
# Health and status endpoints
ENABLE_STATUS_ENDPOINT=true
ENABLE_METRICS_ENDPOINT=true
ENABLE_DEBUG_ENDPOINT=false

# Endpoint paths
STATUS_ENDPOINT_PATH=/api/system/status
METRICS_ENDPOINT_PATH=/api/system/metrics
HEALTH_ENDPOINT_PATH=/health

# === OPTIMIZATION FLAGS ===
# Memory optimization
OPTIMIZE_FOR_LOW_MEMORY=true
AGGRESSIVE_GC=true
LIMIT_CACHE_SIZE=true

# Performance optimization
OPTIMIZE_FOR_LATENCY=true
ENABLE_REQUEST_POOLING=true
OPTIMIZE_DATABASE_QUERIES=true

# === COMPATIBILITY ===
# Browser compatibility
SUPPORT_OLD_BROWSERS=false
ENABLE_POLYFILLS=false
OPTIMIZE_FOR_MOBILE=true

# API compatibility
API_VERSION=v1
MAINTAIN_BACKWARD_COMPATIBILITY=true

# === CUSTOM APPLICATION SETTINGS ===
# Add your custom environment variables below
# CUSTOM_SETTING_1=value1
# CUSTOM_SETTING_2=value2

# === VALIDATION & WARNINGS ===
# Environment validation (used by application startup)
REQUIRE_GEMINI_API_KEY=true
REQUIRE_SECRET_KEY=true
VALIDATE_MEMORY_LIMITS=true

# Warning thresholds
WARN_HIGH_MEMORY_USAGE=true
WARN_SLOW_RESPONSES=true
WARN_ERROR_RATE=true

# ===================================================================
# DEPLOYMENT CHECKLIST:
# ===================================================================
# 1. ✅ Set GEMINI_API_KEY with valid API key
# 2. ✅ Change SECRET_KEY to a secure random value
# 3. ✅ Verify memory limits (MAX_MEMORY_MB <= 400)
# 4. ✅ Test with FLASK_DEBUG=False
# 5. ✅ Configure logging levels appropriately
# 6. ✅ Enable security headers and HTTPS
# 7. ✅ Set up monitoring and health checks
# 8. ✅ Optimize cache sizes for available memory
# 9. ✅ Test terminal functionality in production mode
# 10. ✅ Verify all external service connections
# ===================================================================

# ===================================================================
# MEMORY USAGE BREAKDOWN (Estimated):
# ===================================================================
# Python runtime: ~50-70MB
# Flask + dependencies: ~80-120MB
# Gemini AI client: ~20-30MB
# RSS processing: ~30-50MB
# Caching (optimized): ~30-50MB
# Terminal interface: ~20-40MB
# Buffer/overhead: ~40-80MB
# TOTAL ESTIMATED: ~270-440MB (within 512MB limit)
# ===================================================================

# ===================================================================
# OPTIMIZATION NOTES:
# ===================================================================
# - Single worker process to minimize memory usage
# - Reduced cache sizes and limits
# - Optimized garbage collection settings
# - Limited concurrent RSS processing
# - Disabled heavy features not essential for core functionality
# - Memory monitoring and automatic cleanup enabled
# - Aggressive timeout settings to prevent memory leaks
# ===================================================================
